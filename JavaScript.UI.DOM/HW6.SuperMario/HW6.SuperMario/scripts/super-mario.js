window.onload = function () {

    var width = this.window.innerWidth - 40;
    var height = this.window.innerHeight - 25;

    function drawGameField() {
        var wrapper = document.getElementById('svg-wrapper');
        var svgNS = 'http://www.w3.org/2000/svg';

        var svg = makeSvg(width, height);
        wrapper.appendChild(svg);

        svg.appendChild(makeRect(0, 0, width, height, 'rgb(191, 248, 248)', 'none'));
        svg.appendChild(makePath('m 157.71936,1100.3915 c 12.335,-10.5007 19.03975,-27.2625 17.3494,-43.3734 -1.02356,-9.7557 -4.86914,-18.956 -8.49931,-28.0688 -3.63017,-9.1128 -7.13054,-18.5113 -7.40431,-28.3167 -0.2214,-7.92978 1.82745,-16.09246 6.72626,-22.33201 2.44941,-3.11978 5.5853,-5.71891 9.17214,-7.4122 3.58684,-1.69328 7.62538,-2.46416 11.57148,-2.06302 3.18432,0.3237 6.24213,1.38697 9.37959,2.02027 1.56873,0.31664 3.16696,0.52627 4.76658,0.47758 1.59963,-0.0487 3.20499,-0.36215 4.64901,-1.05207 1.63801,-0.78261 3.03186,-2.03677 4.07569,-3.52203 1.04383,-1.48526 1.74523,-3.19642 2.15544,-4.96483 0.82044,-3.53683 0.4876,-7.23693 -0.0834,-10.8225 -0.57097,-3.58556 -1.37723,-7.15109 -1.49511,-10.77991 -0.11788,-3.62882 0.51345,-7.40485 2.57627,-10.39266 2.16714,-3.13892 5.73538,-5.11371 9.44836,-5.98727 3.71298,-0.87356 7.58861,-0.74234 11.38379,-0.36041 3.79519,0.38193 7.57189,1.00968 11.3848,1.11483 3.81291,0.10514 7.72068,-0.3395 11.15654,-1.99606 4.02263,-1.93947 7.1593,-5.45676 9.13859,-9.45994 1.97929,-4.00319 2.86629,-8.47523 3.14178,-12.93249 0.55097,-8.91453 -1.26339,-17.84957 -0.7141,-26.7642 0.74451,-12.08287 6.11387,-23.98126 15.27576,-31.89389 4.58095,-3.95631 10.05176,-6.89603 15.90949,-8.42069 5.85772,-1.52465 12.09576,-1.62155 17.97137,-0.16735 4.76022,1.17814 9.2638,3.34971 14.10568,4.12684 2.42095,0.38857 4.92888,0.41627 7.29881,-0.21254 2.36992,-0.62881 4.59764,-1.95022 6.0654,-3.9143 1.40649,-1.88209 2.05011,-4.25358 2.15705,-6.60072 0.10693,-2.34713 -0.29189,-4.68824 -0.80255,-6.98164 -0.51066,-2.2934 -1.13524,-4.56481 -1.4912,-6.88726 -0.35595,-2.32245 -0.43674,-4.72174 0.1367,-7.00026 0.93475,-3.71419 3.56921,-6.84495 6.74842,-8.98073 3.17922,-2.13578 6.88106,-3.36575 10.60701,-4.25247 3.72595,-0.88672 7.52389,-1.45498 11.23433,-2.4045 3.71044,-0.94952 7.37938,-2.3092 10.44634,-4.60326 2.71036,-2.02733 4.86605,-4.72563 6.58799,-7.63957 1.72195,-2.91393 3.02996,-6.05128 4.26233,-9.20364 2.46472,-6.30472 4.7669,-12.9114 9.39068,-17.85559 3.09311,-3.30745 7.08983,-5.68834 11.33351,-7.26875 4.24369,-1.5804 8.74009,-2.38887 13.24479,-2.85173 6.8899,-0.70794 13.91123,-0.61618 20.66655,0.91276 6.75531,1.52894 13.24886,4.54409 18.36965,9.20772 2.15433,1.962 4.05972,4.20398 6.37573,5.97222 1.15801,0.88412 2.41954,1.6469 3.78775,2.14754 1.36822,0.50064 2.84831,0.73299 4.29432,0.55494 1.94958,-0.24006 3.73778,-1.20451 5.35003,-2.32663 1.61224,-1.12213 3.10255,-2.41895 4.77047,-3.4565 3.90721,-2.43053 8.57482,-3.31566 12.70077,-5.35289 2.06298,-1.01862 4.01175,-2.35058 5.44423,-4.15097 1.43249,-1.8004 2.3118,-4.10916 2.0959,-6.39976 -0.21439,-2.27454 -1.49864,-4.37224 -3.25582,-5.83232 -1.75718,-1.46008 -3.9544,-2.32166 -6.19881,-2.74842 -4.48882,-0.85352 -9.10892,-0.0421 -13.67787,-0.0939 -6.10849,-0.0693 -12.16039,-1.70751 -17.60626,-4.47535 -5.44587,-2.76784 -10.29409,-6.64743 -14.4087,-11.16279 -8.22921,-9.03071 -13.44072,-20.42896 -17.14164,-32.07271 -5.63607,-17.73206 -8.00151,-37.04898 -2.8916,-54.93976 1.9096,-6.68588 4.94343,-13.22683 9.92801,-18.07466 2.49229,-2.42392 5.45412,-4.39011 8.72284,-5.57433 3.26871,-1.18421 6.84771,-1.56966 10.26485,-0.92932 2.94098,0.55111 5.68833,1.83237 8.55097,2.70323 1.43132,0.43542 2.90184,0.76974 4.39576,0.85024 1.49391,0.0805 3.01629,-0.0996 4.40267,-0.6619 1.3886,-0.56323 2.61298,-1.50146 3.57897,-2.64702 0.96599,-1.14556 1.67798,-2.49449 2.15446,-3.91519 0.95296,-2.84142 0.96429,-5.91722 0.64558,-8.89719 -0.31871,-2.97996 -0.95586,-5.9191 -1.26981,-8.89957 -0.31395,-2.98047 -0.29265,-6.05723 0.6739,-8.89405 0.7886,-2.31453 2.19328,-4.40163 3.96286,-6.08909 1.76958,-1.68747 3.89743,-2.98112 6.16936,-3.88515 4.54387,-1.80806 9.57717,-2.0497 14.44608,-1.59202 2.42001,0.22748 4.82453,0.62142 7.25119,0.76125 2.42666,0.13983 4.90412,0.0174 7.20671,-0.76125 2.06945,-0.69982 3.94933,-1.92048 5.49857,-3.46069 1.54923,-1.54021 2.77201,-3.39499 3.66498,-5.38873 1.78592,-3.98747 2.24103,-8.46168 2.04062,-12.82623 -0.40083,-8.72912 -3.31521,-17.33228 -2.52947,-26.03519 0.48129,-5.33084 2.36229,-10.49603 5.17984,-15.04695 2.81756,-4.55092 6.5554,-8.49875 10.77136,-11.79651 8.4319,-6.59551 18.62088,-10.54101 28.868,-13.63848 15.04871,-4.54887 30.59028,-7.46814 46.2651,-8.6747 11.06252,-0.85153 22.19048,-0.85153 33.253,10e-6 9.69296,2.18466 19.33501,4.59517 28.9157,7.2289 11.17326,3.07153 22.26304,6.44669 33.253,10.12049 l 44.8193,24.57832 20.2409,28.91566 c 3.46971,4.95675 6.73804,10.05194 10.21653,15.00253 3.47849,4.95059 7.46288,9.84605 12.91605,12.46735 4.02619,1.93536 8.56639,2.45316 13.01202,2.89157 5.77538,0.56955 11.55938,1.05155 17.34937,1.44578 9.46419,4.19905 20.10007,5.71847 30.36143,4.33736 10.62427,-1.42995 20.82511,-5.97913 28.9157,-13.01206 11.25082,-9.78004 17.92799,-23.62731 26.02415,-36.14458 5.65329,-8.74041 12.16216,-17.01826 20.10153,-23.75033 7.93937,-6.73208 17.38559,-11.88357 27.60942,-13.84003 9.07228,-1.73609 18.62358,-0.89278 27.25131,2.40609 8.6277,3.29887 16.3051,9.04308 21.9048,16.3891 l 41.9274,52.04819 c 2.3739,2.94688 4.8883,5.85305 8.0531,7.92743 3.1649,2.07438 6.8612,3.25652 10.6173,3.71633 3.756,0.45982 7.5615,0.24412 11.3362,0.51 1.8874,0.13294 3.7757,0.39919 5.5779,0.97536 1.8022,0.57617 3.5225,1.47462 4.8973,2.77449 1.4748,1.3944 2.5107,3.2165 3.1189,5.15288 0.6082,1.93637 0.8017,3.98636 0.7399,6.01506 -0.1235,4.05741 -1.2453,8.00801 -1.9605,12.0038 -0.7151,3.9958 -1.0029,8.23161 0.478,12.01111 0.7405,1.88975 1.9281,3.62553 3.5307,4.87094 1.6027,1.24542 3.6321,1.97616 5.6592,1.87392 1.7969,-0.0906 3.524,-0.82299 4.9782,-1.88239 1.4542,-1.0594 2.653,-2.43505 3.6965,-3.90074 4.8336,-6.78941 6.3557,-15.29741 8.4075,-23.37519 1.0259,-4.03889 2.2221,-8.0607 4.0752,-11.79312 1.8532,-3.73242 4.3989,-7.18537 7.7583,-9.65097 4.683,-3.43697 10.6983,-4.74428 16.4991,-4.43961 5.8009,0.30467 11.4287,2.11902 16.7539,4.43961 5.1977,2.26505 10.2658,5.09201 14.1564,9.21629 1.9454,2.06215 3.5761,4.43804 4.6656,7.05522 1.0896,2.61718 1.6285,5.47965 1.419,8.30681 -0.2559,3.45351 -1.5964,6.71749 -2.5648,10.04233 -0.4841,1.66242 -0.8788,3.36021 -0.995,5.08779 -0.1163,1.72758 0.053,3.49217 0.6682,5.11084 0.6745,1.77585 1.8737,3.33273 3.348,4.53062 1.4743,1.1979 3.2171,2.04456 5.0404,2.57762 3.6466,1.06611 7.5399,0.8862 11.3078,0.39913 3.7679,-0.48706 7.5085,-1.27236 11.3059,-1.39062 3.7974,-0.11826 7.7408,0.4864 10.9256,2.55795 2.7295,1.77544 4.7281,4.5278 6.0081,7.52182 1.28,2.99402 1.8854,6.2338 2.2527,9.46918 0.7346,6.47074 0.5994,13.23012 3.3055,19.15358 2.5983,5.68751 7.6261,10.00923 13.2368,12.76944 5.6107,2.7602 11.8087,4.09559 17.985,5.07125 6.1764,0.97567 12.4189,1.61969 18.4916,3.11042 6.0726,1.49074 12.0479,3.89182 16.7926,7.96455 4.2389,3.6386 7.3267,8.47386 9.5378,13.60404 2.2111,5.13018 3.5902,10.57559 4.8328,16.02203 2.4852,10.89289 4.6745,22.37185 11.6535,31.09682 6.6509,8.31478 16.9616,13.0556 27.4263,15.02061 10.4646,1.96501 21.2172,1.4274 31.8508,0.88301 7.7157,-0.39501 15.4816,-0.79664 23.0001,-2.57432 7.5186,-1.77768 14.8561,-5.0296 20.3734,-10.43773 3.9703,-3.89175 6.8727,-8.77614 8.9532,-13.93177 2.0806,-5.15563 3.3696,-10.59537 4.4226,-16.05435 2.1059,-10.91795 3.365,-22.22394 8.311,-32.18256 5.2069,-10.48413 14.3491,-18.82028 24.9778,-23.72525 10.6288,-4.90497 22.6631,-6.46647 34.2993,-5.19041 9.5284,1.04492 18.743,3.92042 28.0128,6.36031 9.2698,2.43989 18.8133,4.4679 28.3727,3.76017 16.3627,-1.21142 31.3519,-10.30554 47.7109,-11.56626 15.5687,-1.19981 30.7477,4.79734 44.8192,11.56626 14.9865,7.20909 29.4879,15.42653 43.3735,24.57832 12.0618,4.57078 24.7454,7.49774 37.5904,8.67469 7.0632,0.64718 14.2148,0.7743 21.1228,2.38243 6.9081,1.60812 13.7222,4.90757 17.9133,10.62962 3.3557,4.58144 4.7438,10.27347 5.985,15.81509 1.2413,5.54162 2.4687,11.24222 5.5813,15.99214 3.7675,5.74924 10.0331,9.55704 16.6647,11.36532 6.6316,1.80827 13.6373,1.77168 20.4749,1.06813 6.8376,-0.70355 13.5933,-2.05785 20.4212,-2.85006 6.8279,-0.79221 13.8146,-1.01173 20.5115,0.53709 6.5809,1.52198 12.7392,4.74882 17.8499,9.1653 5.1107,4.41649 9.177,10.00613 11.9637,16.15907 5.5735,12.30588 5.8943,26.65575 2.1232,39.62792 -3.771,12.97216 -11.438,24.60905 -20.9484,34.20331 -9.5104,9.59426 -20.8311,17.23852 -32.6751,23.73597 -9.9232,5.44373 -20.3621,10.19098 -29.0806,17.4085 -4.3592,3.60876 -8.2586,7.83398 -11.1056,12.72487 -2.847,4.89089 -4.6134,10.47256 -4.6331,16.13169 -0.025,7.32935 2.8917,14.48508 7.3427,20.30819 4.451,5.8231 10.3661,10.39708 16.6957,14.09248 12.6593,7.39079 27.0651,11.45408 39.576,19.09331 22.417,13.68798 37.2151,39.08348 38.0712,65.33518 0.856,26.2517 -12.2562,52.5574 -33.7338,67.6767 l -1729.15584,-5.7831', '#ffffff', 'rgb(168, 200, 192)', 3));
        svg.appendChild(makeRect(0, height - 100, width, height - 50, 'rgb(7, 166, 7)', 'none'));
        svg.appendChild(makeRect(0, height - 50, width, height, 'rgb(160, 80, 8)', 'none'));

        function makeSvg(svgWidth, svgHeight) {
            var svg = document.createElementNS(svgNS, 'svg');
            svg.setAttribute('width', svgWidth);
            svg.setAttribute('height', svgHeight);
            return svg;
        }

        function makePath(d, fill, stroke, strokeWidth) {
            var path = document.createElementNS(svgNS, 'path');
            path.setAttribute('d', d);
            path.setAttribute('fill', fill);
            path.setAttribute('stroke', stroke);
            path.setAttribute('stroke-width', strokeWidth);
            return path;
        }

        function makeRect(x, y, rectWidth, rectHeight, fill, stroke) {
            var rect = document.createElementNS(svgNS, 'rect');
            rect.setAttribute('x', x);
            rect.setAttribute('y', y);
            rect.setAttribute('width', rectWidth);
            rect.setAttribute('height', rectHeight);
            rect.setAttribute('fill', fill);
            rect.setAttribute('stroke', stroke);
            return rect;
        }
    }

    function runMario() {
        var mario,
            marioImage,
            canvas;

        function gameLoop() {

            setTimeout(gameLoop, 20);

            mario.update();
            mario.render();
        }

        function sprite(options) {

            var that = {},
                frameIndex = 0,
                tickCount = 0,
                ticksPerFrame = options.ticksPerFrame || 0,
                numberOfFrames = options.numberOfFrames || 1;

            that.context = options.context;
            that.width = options.width;
            that.height = options.height;
            that.image = options.image;

            that.update = function () {

                tickCount += 1;

                if (tickCount > ticksPerFrame) {

                    tickCount = 0;

                    // If the current frame index is in range
                    if (frameIndex < numberOfFrames - 1) {
                        // Go to the next frame
                        frameIndex += 1;
                    } else {
                        frameIndex = 0;
                    }
                }
            };

            that.render = function () {

                // Clear the canvas
                that.context.clearRect(0, 0, that.width, that.height);

                // Draw the animation
                that.context.drawImage(
                  that.image,
                  frameIndex * that.width / numberOfFrames,
                  0,
                  that.width / numberOfFrames,
                  that.height,
                  0,
                  0,
                  that.width / numberOfFrames,
                  that.height);
            };

            return that;
        }

        // Get canvas
        canvas = document.getElementById("superMario");
        canvas.width = 150;
        canvas.height = 150;
        canvas.style.position = 'absolute';
        canvas.style.top = (height - 250) + 'px';
        canvas.style.left = (width / 2 - 75) + 'px';

        // Create sprite sheet
        marioImage = new Image();

        // Create sprite
        mario = sprite({
            context: canvas.getContext("2d"),
            width: 750,
            height: 150,
            image: marioImage,
            numberOfFrames: 5,
            ticksPerFrame: 5
        });

        // Load sprite sheet
        marioImage.addEventListener("load", gameLoop);
        marioImage.src = "images/smSprite.png";
    }

    drawGameField();
    runMario();
};


